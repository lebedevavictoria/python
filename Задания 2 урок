1). Загрузить, просмотреть, определить количество строк и склеить 3 датасета: marketing_campaign.csv, users.csv и subscribers.csv.

import pandas as pd

df1 = pd.read_csv('users.csv')

df2 = pd.read_csv('marketing_campaign.csv')

df3 = pd.read_csv('subscribers.csv')

df4=df1.set_index('user_id')

df5=df2.set_index('user_id')

df6=df3.set_index('user_id')

df7=df4.join(df5, how="inner")

df8=df6.join(df7, how="inner")

df8

subscribing_channel	date_subscribed	date_canceled	is_retained	age_group	language_preferred	date_served	marketing_channel	variant	language_displayed	converted
user_id											
a1000	House Ads	1/1/18	NaN	True	0-18 years	English	1/1/18	House Ads	personalization	English	True
a1001	House Ads	1/1/18	NaN	True	19-24 years	English	1/1/18	House Ads	personalization	English	True
a1002	House Ads	1/1/18	NaN	True	24-30 years	English	1/1/18	House Ads	personalization	English	True
a1003	House Ads	1/1/18	NaN	True	30-36 years	English	1/1/18	House Ads	personalization	English	True
a1004	House Ads	1/1/18	NaN	True	36-45 years	English	1/1/18	House Ads	personalization	

10037 rows × 11 columns

2) Общая статистика датасета

df8.info()
<class 'pandas.core.frame.DataFrame'>
Index: 10037 entries, a1000 to a11036
Data columns (total 11 columns):
 #   Column               Non-Null Count  Dtype 
---  ------               --------------  ----- 
 0   subscribing_channel  1856 non-null   object
 1   date_subscribed      1856 non-null   object
 2   date_canceled        577 non-null    object
 3   is_retained          1856 non-null   object
 4   age_group            10037 non-null  object
 5   language_preferred   10037 non-null  object
 6   date_served          10021 non-null  object
 7   marketing_channel    10022 non-null  object
 8   variant              10037 non-null  object
 9   language_displayed   10037 non-null  object
 10  converted            10022 non-null  object
dtypes: object(11)
memory usage: 1.2+ MB

3) Определить эффективность маркетинговых каналов платящих игроков

Сначала определяем платящих игроков: 

filtered_converted=df8[df8["converted"] == True]
Потом определяем, через какие маркетинговые каналы они пришли:

filtered_converted["marketing_channel"].value_counts()

House Ads    298
Instagram    265
Facebook     237
Email        193
Push          83
Name: marketing_channel, dtype: int64


4)df8["date_subscribed"].unique()
array(['1/1/18', '1/2/18', '1/3/18', '1/4/18', '1/5/18', '1/6/18',
       '1/7/18', '1/8/18', '1/9/18', '1/10/18', '1/11/18', '1/12/18',
       '1/13/18', '1/14/18', '1/15/18', '1/16/18', '1/17/18', '1/18/18',
       '1/19/18', '1/20/18', '1/21/18', '1/22/18', '1/23/18', '1/24/18',
       '1/25/18', '1/26/18', '1/27/18', '1/28/18', '1/29/18', '1/30/18',
       '1/31/18', nan], dtype=object)

Самая ранняя дата - 1/1/18

5)Определить портрет аудитории удержанных подписчиков (по возрасту и языку).
Сначала фильтруем  только тех, кто остался подписчиком:

filtered_retained=df8[df8["is_retained"] == True]

Потом определяем:

Возраст: filtered_retained["age_group"].value_counts()

19-24 years    326
24-30 years    273
0-18 years     229
30-36 years    122
45-55 years    119
36-45 years    115
55+ years       95
Name: age_group, dtype: int64 

В основном - от 19 до 24 лет

Язык: filtered_retained["language_preferred"].value_counts()

English    1179
German       44
Spanish      44
Arabic       12
Name: language_preferred, dtype: int64

В основном  - носители английского языка




